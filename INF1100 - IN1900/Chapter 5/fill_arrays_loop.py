# Exercise 5.2

from numpy import pi, sqrt, zeros, exp

"""
I didn't get arange in numpy to work, so I made my own range function to work
with floats as steps
"""
def frange(start, stop, step):
  x = start
  while x < stop + step:
    yield x
    x += step

def h(x):
  f = 1 / (sqrt(2 * pi))
  e = exp(-0.5 * x**2)
  fe = f * e
  return fe

n = 41
dx = 8. / (n - 1)

x = zeros(n)
y = zeros(n)

j = 0

for i in frange(-4, 4, dx):
  x[j] = i
  y[j] = h(x[j])
  j += 1

print x
print y
"""
Terminal> python3 fill_arrays_loop.py
[ -4.00000000e+00 -3.80000000e+00 -3.60000000e+00 -3.40000000e+00
 -3.20000000e+00 -3.00000000e+00 -2.80000000e+00 -2.60000000e+00
 -2.40000000e+00 -2.20000000e+00 -2.00000000e+00 -1.80000000e+00
 -1.60000000e+00 -1.40000000e+00 -1.20000000e+00 -1.00000000e+00
 -8.00000000e-01 -6.00000000e-01 -4.00000000e-01 -2.00000000e-01
  1.27675648e-15  2.00000000e-01  4.00000000e-01  6.00000000e-01
  8.00000000e-01  1.00000000e+00  1.20000000e+00  1.40000000e+00
  1.60000000e+00  1.80000000e+00  2.00000000e+00  2.20000000e+00
  2.40000000e+00  2.60000000e+00  2.80000000e+00  3.00000000e+00
  3.20000000e+00  3.40000000e+00  3.60000000e+00  3.80000000e+00
  4.00000000e+00]
[ 1.33830226e-04  2.91946926e-04  6.11901930e-04  1.23221917e-03
  2.38408820e-03  4.43184841e-03  7.91545158e-03  1.35829692e-02
  2.23945303e-02  3.54745928e-02  5.39909665e-02  7.89501583e-02
  1.10920835e-01  1.49727466e-01  1.94186055e-01  2.41970725e-01
  2.89691553e-01  3.33224603e-01  3.68270140e-01  3.91042694e-01
  3.98942280e-01  3.91042694e-01  3.68270140e-01  3.33224603e-01
  2.89691553e-01  2.41970725e-01  1.94186055e-01  1.49727466e-01
  1.10920835e-01  7.89501583e-02  5.39909665e-02  3.54745928e-02
  2.23945303e-02  1.35829692e-02  7.91545158e-03  4.43184841e-03
  2.38408820e-03  1.23221917e-03  6.11901930e-04  2.91946926e-04
  1.33830226e-04]
"""
